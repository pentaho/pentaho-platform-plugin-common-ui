/*!
 * Copyright 2017 Hitachi Vantara. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The `spec.ITypesResolve` interface describes a special syntax used
 * for resolving types from a Type API [context]{@link pentaho.type.Context}.
 *
 * ##### Resolve types by base type syntax
 *
 * Denotes the array of known subtypes of a given type. Includes the base type itself.
 *
 * ```json
 * {$types: {base: "my/Service"}}
 * ```
 *
 * A type is known to be a subtype of another if,
 * in its {@link pentaho.modules} declaration,
 * the latter is the value of {@link pentaho.modules.spec.IDeclaration#base}.
 *
 * @name pentaho.type.spec.ITypesResolve
 * @interface
 *
 * @see pentaho.type.spec.UModuleDependencyReference
 */

/**
 * A reference to the base type of the denoted types.
 *
 * The base type itself is also denoted.
 *
 * @name base
 * @memberOf pentaho.type.spec.IInstanceResolve#
 * @type {UTypeReference}
 */
