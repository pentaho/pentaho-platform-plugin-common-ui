/*!
 * Copyright 2010 - 2017 Pentaho Corporation. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The `IContext` interface allows access to contextual information of the Pentaho Web Client Platform.
 * For example, it allows access to
 * [user]{@link pentaho.context.IContext#user},
 * [theme]{@link pentaho.context.IContext#theme},
 * [locale]{@link pentaho.context.IContext#locale},
 * [application]{@link pentaho.context.IContext#application}
 * and
 * [server]{@link pentaho.context.IContext#server}.
 *
 * Not all information is always available, or sometimes it is not fixed,
 * and so some of these can be `null`. Check the documentation of each property and sub-property.
 *
 * @name pentaho.context.IContext
 * @interface
 */

/**
 * Gets the identifier of the client application.
 *
 * @name application
 * @memberOf pentaho.context.IContext#
 * @type {?nonEmptyString}
 * @readOnly
 */

/**
 * Gets information about the user.
 *
 * @name user
 * @memberOf pentaho.context.IContext#
 * @type {!pentaho.context.IUser}
 * @readOnly
 */

/**
 * Gets information about the server web application.
 *
 * @name server
 * @memberOf pentaho.context.IContext#
 * @type {!pentaho.context.IServer}
 * @readOnly
 */

/**
 * Gets the identifier of the theme.
 *
 * @name theme
 * @memberOf pentaho.context.IContext#
 * @type {?nonEmptyString}
 * @readOnly
 */

/**
 * Gets the identifier of the locale.
 *
 * @name locale
 * @memberOf pentaho.context.IContext#
 * @type {?nonEmptyString}
 * @readOnly
 */

/**
 * Gets the reserved characters for file names, all concatenated in a single string.
 *
 * @name reservedChars
 * @memberOf pentaho.context.IContext#
 * @type {?nonEmptyString}
 * @readOnly
 */

/**
 * Creates a child context of this one given its specification.
 * Any unspecified information is inherited from this context.
 *
 * @name createChild
 * @memberOf pentaho.context.IContext#
 * @method
 * @param {pentaho.context.spec.IContext} [childSpec] - The child context specification.
 * @return {!pentaho.context.IContext} The child context.
 */

/**
 * Creates a specification with the information of this context.
 *
 * @name toSpec
 * @memberOf pentaho.context.IContext#
 * @method
 * @return {!pentaho.context.spec.IContext} The context specification.
 * @see pentaho.context.IContext#toJSON
 */

/**
 * Serializes this context to JSON.
 *
 * This method is an alias of [toSpec]{pentaho.context.IContext#toSpec}.
 *
 * @name toJSON
 * @memberOf pentaho.context.IContext#
 * @method
 * @return {!pentaho.context.spec.IContext} The context specification.
 * @see pentaho.context.IContext#toSpec
 */
