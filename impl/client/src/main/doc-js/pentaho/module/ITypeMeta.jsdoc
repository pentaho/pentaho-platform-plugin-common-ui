/*!
 * Copyright 2018 Hitachi Vantara. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @classDesc The `ITypeMeta` interface contains the metadata of a type module.
 *
 * @name ITypeMeta
 * @memberOf pentaho.module
 * @interface
 * @extends pentaho.module.IMeta
 */

/**
 * Gets the base type module.
 *
 * When the type is a root type, `null` is returned.
 *
 * @name ancestor
 * @memberOf pentaho.module.ITypeMeta#
 * @type {pentaho.module.ITypeMeta}
 * @readOnly
 */

/**
 * Gets a value that indicates if the type module is abstract.
 *
 * An abstract type module does not have a corresponding file or implementation.
 * Its value is `undefined`.
 *
 * @name isAbstract
 * @memberOf pentaho.module.ITypeMeta#
 * @type {boolean}
 * @readOnly
 */

/**
 * Gets the array of subtypes, possibly empty.
 *
 * @name subtypes
 * @memberOf pentaho.module.ITypeMeta#
 * @type {!Array.<!pentaho.module.ITypeMeta>}
 * @readOnly
 */

/**
 * Gets the array of instance modules, possibly empty.
 *
 * @name instances
 * @memberOf pentaho.module.ITypeMeta#
 * @type {!Array.<!pentaho.module.IInstanceMeta>}
 * @readOnly
 */
