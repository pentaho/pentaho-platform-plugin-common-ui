<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>common-ui-impl</artifactId>
    <version>8.1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>common-ui-impl-client</artifactId>
  <version>8.1.0.0-SNAPSHOT</version>
  <name>Common UI client side</name>

  <description>This artifact is a temporary container for all client side code that either was produced by pentaho or
    that is a modified external dependency that is included in common-ui. The goal for the future is to have artifacts
    for each of the constituents (e.g. vizapi, prompting) of the current artifact.</description>

  <properties>
    <js.project.list>dojo,dijit,jquery,pentaho-cdf-js,dojo-release,angular,angular-mocks,angular-resource,angular-route,angular-animate</js.project.list>
    <build.javascriptReportDirectory>target/js-reports</build.javascriptReportDirectory>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
    <pentaho-cdf-plugin.version>8.1.0.0-SNAPSHOT</pentaho-cdf-plugin.version>

    <docjs.config.file>jsdoc-vizapi.json</docjs.config.file>
    <docjs.config.github.branch>master</docjs.config.github.branch>
    <docjs.config.template.directory>${project.basedir}/src/doc/javascript/template</docjs.config.template.directory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>dojo</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>dijit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dojotoolkit.dojo</groupId>
      <artifactId>dojo-release</artifactId>
      <type>zip</type>
      <classifier>src</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>jquery</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-cdf-js</artifactId>
      <version>${pentaho-cdf-plugin.version}</version>
      <type>zip</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-mocks</artifactId>
      <version>${angular.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-resource</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-route</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-animate</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <targetPath>${project.build.directory}</targetPath>
        <filtering>true</filtering>
        <directory>${build.javascriptTestConfigDirectory}</directory>
        <includes>
          <include>*</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>../../node_modules</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>javascript-test_npm-install</id>
            <phase>${javascript-test_npm-install-phase}</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
              <workingDirectory>${frontend-maven-plugin.installDirectory}</workingDirectory>
            </configuration>
          </execution>
          <execution>
            <id>javascript-test_karma</id>
            <phase>${javascript-test_karma-phase}</phase>
            <goals>
              <goal>karma</goal>
            </goals>
            <configuration>
              <karmaConfPath>${project.build.directory}/${karma.file.config}</karmaConfPath>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-javascript-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${build.javascriptSourceDirectory}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>javascript-copy-jquery-clean</id>
            <phase>${javascript_unpack-dependencies-phase}</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.webjars.npm</groupId>
                  <artifactId>jquery</artifactId>
                  <version>${jquery.version}</version>
                  <outputDirectory>${build.dependenciesDirectory}/jqueryClean</outputDirectory>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
